1. Create one file <demo.conf>

2. kubectl create configmap mymap --from-file=demo.conf

3. kubectl get configmap

4. kubectl describe configmap mymap

5. create a pod and map this configuration file 

apiVersion: v1
kind: Pod
metadata:
  name: my.vol.config
spec:
  containers:
  - name: q.spider
    image: centos
    command: ["/bin/bash", "-c", "while true; do echo Hello-everyone; sleep 5 ; done"]
    volumeMounts:
      - name: testconfigmap
        mountPath: "/tmp/config"   # the config files will be mounted as ReadOnly by default here
  volumes:
  - name: testconfigmap
    configMap:
       name: mymap   # this should match the config map name created in the first step
       items:
       - key: demo.conf
         path: demo.conf

6. kubectl exec my.vol.config -it -- /bin/bash

7. cd /tmp/

demo.conf

####################################### secret ###############################################################


1. Create two file username.txt and password.txt ( echo "root" > username.txt; echo "mypassword123" > password.txt
)

2. kubectl create secret generic mysecret --from-file=username.txt --from-file=password.txt

3. kubectl get secret

4. kubectl describe secret mysecret

5. create a pod and map this secret file 

apiVersion: v1
kind: Pod
metadata:
  name: my.vol.secret
spec:
  containers:
  - name: skillrary
    image: centos
    command: ["/bin/bash", "-c", "while true; do echo Good-Bye; sleep 5 ; done"]
    volumeMounts:
      - name: testsecret
        mountPath: "/tmp/mysecrets"   # the secret files will be mounted as ReadOnly by default here
  volumes:
  - name: testsecret
    secret:
       secretName: mysecret

6. kubectl exec my.vol.secret -it -- /bin/bash

7. cd /tmp/

username.txt  password.txt